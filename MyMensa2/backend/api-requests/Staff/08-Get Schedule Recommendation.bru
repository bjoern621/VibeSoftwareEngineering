meta {
  name: Get Schedule Recommendation
  type: http
  seq: 8
}

get {
  url: http://localhost:8081/api/staff/schedule-recommendation?date=2025-01-25
  body: none
  auth: none
}

params:query {
  date: 2025-01-25
}

tests {
  test("Status should be 200", function() {
    expect(res.status).to.equal(200);
  });
  
  test("Response should contain recommendation details", function() {
    expect(res.body).to.have.property('date');
    expect(res.body).to.have.property('expectedVisitors');
    expect(res.body).to.have.property('plannedMeals');
    expect(res.body).to.have.property('recommendedStaff');
    expect(res.body).to.have.property('availableStaff');
  });
  
  test("recommendedStaff should have cooks and service", function() {
    expect(res.body.recommendedStaff).to.have.property('cooks');
    expect(res.body.recommendedStaff).to.have.property('service');
    expect(res.body.recommendedStaff).to.have.property('total');
  });
  
  test("availableStaff should be categorized", function() {
    expect(res.body.availableStaff).to.have.property('cooks');
    expect(res.body.availableStaff).to.have.property('service');
    expect(res.body.availableStaff.cooks).to.be.an('array');
    expect(res.body.availableStaff.service).to.be.an('array');
  });
}
